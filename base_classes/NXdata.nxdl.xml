<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl" ?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2008-2024 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition name="NXdata" 
	type="group" 
	extends="NXobject"
	category="base"
	ignoreExtraFields="true"
	ignoreExtraAttributes="true" 
	xmlns="http://definition.nexusformat.org/nxdl/3.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd"
	>
	
	<!-- 
		The ignoreExtra* attributes are used in the definition to
		avoid warning messages that would be generated from unexpected fields or attributes.
		Since common use of NXdata indicates field names of any value, _many_
		instances of this class would generate a warning message during validation
		without this attribute being set to "true".
	-->

	<symbols>
		<doc>These symbols will be used below to coordinate fields with the same shape.</doc>
		<symbol name="dataRank"><doc>rank of the ``DATA`` field(s)</doc></symbol>
		<symbol name="nx"><doc>length of the ``x`` field</doc></symbol>
		<symbol name="ny"><doc>length of the ``y`` field</doc></symbol>
		<symbol name="nz"><doc>length of the ``z`` field</doc></symbol>
	</symbols>
	
	<doc>
		The :ref:`NXdata` class is designed to encapsulate all the information required for a set of data to be plotted.
		NXdata groups contain plottable data (also referred to as *signals* or *dependent variables*) and their
		associated axis coordinates (also referred to as *axes* or *independent variables*).

		The actual names of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` and :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields
		can be chosen :ref:`freely &lt;validItemName&gt;`, as indicated by the upper case (this is a common convention in all NeXus classes).
		
		.. note:: ``NXdata`` provides data and coordinates to be plotted but
			does not describe how the data is to be plotted or even the dimensionality of the plot.
			https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute

		**Signals:**

		.. index:: plotting
		
		The :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields contain the signal values to be plotted. The name of the field
		to be used as the *default plot signal* is provided by the :ref:`signal &lt;/NXdata@signal-attribute&gt;` attribute.
		The names of the fields to be used as *secondary plot signals* are provided by the
		:ref:`auxiliary_signals&lt;/NXdata@auxiliary_signals-attribute&gt;` attribute.

		An example with three signals, one of which being the default

		.. code-block::

			data:NXdata
			  @signal = "data1"
			  @auxiliary_signals = ["data2", "data3"]
			  data1: float[10,20,30]  --> the default signal
			  data2: float[10,20,30]
			  data3: float[10,20,30]

		**Axes:**

		.. index:: axes (attribute)
		.. index:: coordinates

		The :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields contain the axis coordinates associated with the signal values.

		``Default axes``

		The :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute provides the names of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;`
		fields to be used as the default axis for each dimension of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields.
		As a result the length of the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute must be equal to the rank of the :ref:`DATA &lt;/NXdata/DATA-field&gt;`
		fields. When a particular dimension has no default axis, the string “.” is used in that position.

		``Spanned dimensions``

		The :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` attributes describe the
		:ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions spanned by the corresponding :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields.

		When :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` is missing for a given :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field,
		the position(s) of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field name in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute
		is(are) used. The shape of an :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field must be equal to the shape of the
		:ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions it spans. This means that ``AXISNAME.shape[i] == DATA.shape[AXISNAME_indices[i]]``
		for each ``i`` in ``[0, AXISNAME.ndim)``.

		Note that an :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field can have more than one dimension and can therefore span
		more than one :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension. Conversely, one :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension
		can be spanned by more than one :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field. As stated before, the default
		axis name (if any) of each dimension can be found in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute.

		``Available axes``

		With this definition of the :ref:`axes &lt;/NXdata@axes-attribute&gt;` and :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` attributes
		a list of all available axes is not provided directly. All strings in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute
		(excluding the “.” string) are axis field names. In addition the prefix of an attribute ending with the string "_indices" is also
		an axis field name.

		**Axes examples:**

		``1. Single-dimensional axes``

		:ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields are typically one-dimensional arrays that span a single :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimension.

		An example of this would be 2D data on a regular coordinate grid

		.. code-block::

			data:NXdata
			  @signal = "data"
			  @axes = ["x", "y"]
			  data: float[10,20]
			  x: float[10]        --> coordinates along the first dimension
			  y: float[20]        --> coordinates along the second dimension

		In this example each data point ``data[i,j]`` has axis coordinates ``[x[i], y[j]]``.

		Note that ``@x_indices`` and ``@y_indices`` attributes can be omitted in this case. However it is strongly encouraged to provide them.

		``2. Data dimensions spanned by more than one axis``

		A common case is the need to specify alternative axes for the same dimension

		.. code-block::

			data:NXdata
			  @signal = "data"
			  @axes = ["eta", "q"]
			  data: float[10,20]
			  @eta_indices = [0]
			  @tth_indices = [1]
			  @q_indices = [1]
			  eta: float[10]    --> coordinates along the first dimension
			  tth: float[20]    --> coordinates along the second dimension (alternative)
			  q: float[20]      --> coordinates along the second dimension (default)

		Note that to recognize ``tth`` as an axis, ``@tth_indices`` must be present. Readers that do
		not make use of the :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` attributes will
		not understand that ``tth`` is an axis and cannot take this field into account.

		``3. Multi-dimensional axes``

		When coordinates do not form a regular grid, multi-dimensional :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields
		can be used. Just remember that the shape of an :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field must be equal to the shape
		of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions it spans.

		An example of this would be 2D scatter data where each data point has unique coordinates

		.. code-block::

			data:NXdata
			  @signal = "data"
			  @axes = ["x", "y"]
			  @x_indices = [0, 1]
			  @y_indices = [0, 1]
			  data: float[10,20]
			  x: float[10,20]     --> coordinates along both dimensions
			  y: float[10,20]     --> coordinates along both dimensions

		In this example each data point ``data[i,j]`` has axis coordinates ``[x[i,j], y[i,j]]`` and when
		plotting, ``x`` is used along the first data dimension by default and `y` along the second data dimension.
		Since ``x`` and ``y`` span both dimensions, a reader could choose to use ``y`` for the first dimension
		and ``x`` for the second as an alternative to the default. A writer could also choose to not specify
		any default by defining ``@axes = [".", "."]`` and leave the decision up the the reader.

		Note that omitting ``@x_indices`` would result in ``@x_indices = [0]`` as derived from the position of the string ``"x"`` in ``@axes``.
		This would be invalid since the shape ``[10,20]`` of ``x`` is not equal to the shape ``[10]`` of the spanned data dimensions.

		Omitting indices for multi-dimensional axes can only be done by repeating the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;`
		name in all positions of the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute which they span. For example

		.. code-block::

			data:NXdata
			  @signal = "data"
			  @axes = ["x", "x"]
			  data: float[10,20]
			  x: float[10,20]     --> coordinates along both dimensions

		Note that since ``NXdata`` does not describe how the data is to be plotted or even the dimensionality of the plot,
		a reader would probably treat this particular example as a 1D signal and plot it as such.

		In the case of multi-dimensional axes, single-dimensional axes are often introduced as default axes
		to support readers that do not make use of the :ref:`AXISNAME_indices &lt;/NXdata@AXISNAME_indices-attribute&gt;` attributes
		or cannot handle multi-dimensional axes.

		The 2D scatter example can be enriched as follows

		.. code-block::

			data:NXdata
			  @signal = "data"
			  @axes = ["x_set", "y_set"]
			  @x_indices = [0, 1]
			  @y_indices = [0, 1]
			  @x_set_indices = 0  --> or [0]
			  @y_set_indices = 1  --> or [1]
			  data: float[10,20]
			  x: float[10,20]     --> coordinates along both dimensions
			  y: float[10,20]     --> coordinates along both dimensions
			  x_set: float[10]    --> coordinates along the first dimension
			  y_set: float[20]    --> coordinates along the second dimension

		The first dimension is spanned by three axes: ``x``, ``y`` and ``x_set``. The second dimension is also
		spanned by three axes: ``x``, ``y`` and ``y_set``.

		Technically ``@x_set_indices`` and ``@y_set_indices`` can be omitted. However it is strongly encouraged to provide them.

		``4. Axes without defaults``

		Expanding on the 2D scatter example, a stack of 2D scatter data where the stack dimension
		does not have an axis can be described as follows

		.. code-block::

			data:NXdata
			  @signal = "data"
			  @axes = [".", "x_set", "y_set"]
			  @x_indices = [1, 2]
			  @y_indices = [1, 2]
			  @x_set_indices = 1
			  @y_set_indices = 2
			  data: float[5,10,20]
			  x: float[10,20]     --> coordinates along the last two dimensions
			  y: float[10,20]     --> coordinates along the last two dimensions
			  x_set: float[10]    --> coordinates along the second dimension
			  y_set: float[20]    --> coordinates along the third dimension

		Note that the first dimension does not have a default axis but this doesn't necessarily mean
		the first dimension is not spanned by any axis, although in this example that is the case.

		**Uncertainties:**

		Standard deviations on data values as well as coordinates can be provided by
		:ref:`FIELDNAME_errors &lt;/NXdata/FIELDNAME_errors-field&gt;` fields where ``FIELDNAME`` is the name of a
		:ref:`DATA &lt;/NXdata/DATA-field&gt;` field or an :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field.

		An example of uncertainties on the signal, auxiliary signals and axis coordinates

		.. code-block::

			data:NXdata
			  @signal = "data1"
			  @auxiliary_signals = ["data2", "data3"]
			  @axes = ["x", "z"]
			  @x_indices = 0
			  @z_indices = 2
			  data1: float[10,20,30]
			  data2: float[10,20,30]
			  data3: float[10,20,30]
			  x: float[10]
			  z: float[30]
			  data1_errors: float[10,20,30]
			  data2_errors: float[10,20,30]
			  data3_errors: float[10,20,30]
			  x_errors: float[10]
			  z_errors: float[30]

	</doc>

	<!-- Attributes for data and coordinate field detection -->
	<attribute name="signal">
		<doc>
			.. index:: find the default plottable data
			.. index:: plotting
			.. index:: signal attribute value
			
			The value is the :ref:`name &lt;validItemName&gt;` of the signal that contains
			the default plottable data. This field or link *must* exist and be a direct child
			of this NXdata group.
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the field.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		</doc>
	</attribute>
	<attribute name="auxiliary_signals">
		<doc>
			.. index:: plotting
			
			Array of strings holding the :ref:`names &lt;validItemName&gt;` of additional
			signals to be plotted with the :ref:`default signal &lt;/NXdata@signal-attribute&gt;`.
			These fields or links *must* exist and be direct children of this NXdata group.
			
			Each auxiliary signal needs to be of the same shape as the default signal.
			
			..  NIAC2018:
			    https://www.nexusformat.org/NIAC2018Minutes.html
		</doc>
	</attribute>
	<attribute name="default_slice" type="NX_CHAR_OR_NUMBER">
		<doc>
			Which slice of data to show in a plot by default. This is useful especially for
			datasets with more than 2 dimensions.

			Should be an array of length equal to the number of dimensions
			in the data, with the following possible values:

			* ".": All the data in this dimension should be included
			* Integer: Only this slice should be used.
			* String: Only this slice should be used. Use if ``AXISNAME`` is a string
			  array.

			Example::

			  data:NXdata
				@signal = "data"
				@axes = ["image_id", "channel", ".", "."]
				@image_id_indices = 0
				@channel_indices = 1
				@default_slice = [".", "difference", ".", "."]
				image_id = [1, ..., nP]
				channel = ["threshold_1", "threshold_2", "difference"]
				data = uint[nP, nC, i, j]

			Here, a data array with four dimensions, including the number of images
			(nP) and number of channels (nC), specifies more dimensions than can be
			visualized with a 2D image viewer for a given image.  Therefore the
			default_slice attribute specifies that the "difference" channel should be
			shown by default.

			Alternate version using an integer would look like this (note 2 is a string)::

			  data:NXdata
				@signal = "data"
				@axes = ["image_id", "channel", ".", "."]
				@image_id_indices = 0
				@channel_indices = 1
				@default_slice = [".", "2", ".", "."]
				image_id = [1, ..., nP]
				channel = ["threshold_1", "threshold_2", "difference"]
				data = uint[nP, nC, i, j]

		</doc>
	</attribute>
	<attribute name="AXISNAME_indices" type="NX_INT">
		<!-- 
			nxdl.xsd rules do not allow us to show this as a variable name 
			- we'll use ALL CAPS (see #562)
		-->
		<!-- AXISNAME_indices documentation copied from datarules.rst -->
		<doc>
			The ``AXISNAME_indices`` attribute is a single integer or an array of integers that defines which :ref:`DATA &lt;/NXdata/DATA-field&gt;`
			dimension(s) are spanned by the corresponding axis. The first dimension index is ``0`` (zero).

			When the ``AXISNAME_indices`` attribute is missing for a given :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` field, its value becomes
			the index (or indices) of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` name in the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute.

			.. note::  When ``AXISNAME_indices`` contains multiple integers, it must be saved as an actual array
				of integers and not a comma separated string.
		</doc>
	</attribute>
	<attribute name="axes">
		<doc>
			.. index:: plotting
			
			The ``axes`` attribute is a list of strings which are the names of the :ref:`AXISNAME &lt;/NXdata/AXISNAME-field&gt;` fields
			to be used as the default axis along all :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions. As a result the length must
			be equal to the rank of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` fields. The string "." can be used for
			dimensions without a default axis.

			.. note::  When ``axes`` contains multiple strings, it must be saved as an actual array
				of strings and not a single comma separated string.
		</doc>
	</attribute>
	
	<!-- Data and coordinate fields -->
	<field name="AXISNAME" type="NX_CHAR_OR_NUMBER" nameType="any">
		<doc>
			Coordinate values along one or more :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions. The shape of an ``AXISNAME`` field
			must be equal to the shape of the :ref:`DATA &lt;/NXdata/DATA-field&gt;` dimensions it spans.

			As the upper case ``AXISNAME`` indicates, the names of the ``AXISNAME`` fields can be chosen :ref:`freely &lt;validItemName&gt;`.

			Most ``AXISNAME`` fields will be sequences of numbers but if an axis is better represented using names, such as channel names,
			an array of NX_CHAR can be provided.
		</doc>
		<attribute name="long_name"><doc>Axis label</doc></attribute>
		<attribute name="units">
			<doc>
				Unit in which the coordinate values are expressed.
				See the section :ref:`Design-Units` for more information.
			</doc>
		</attribute>
		<attribute name="distribution" type="NX_BOOLEAN">
			<doc>
				``0|false``: single value, 
				``1|true``: multiple values
			</doc>
		</attribute>
		<attribute name="first_good" type="NX_INT"><doc>Index of first good value</doc></attribute>
		<attribute name="last_good" type="NX_INT"><doc>Index of last good value</doc></attribute>
		<attribute name="axis" type="NX_POSINT"
			deprecated="Use the group ``axes`` attribute   (NIAC2014)">
			<doc>
				Index (positive integer) identifying this specific set of numbers.
				
				N.B. The ``axis`` attribute is the old way of designating a link.  
				Do not use the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute with the ``axis`` attribute.
				The :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute is now preferred.
			</doc>
		</attribute>
	</field>
	<field name="DATA" type="NX_NUMBER" nameType="any">
		<doc>
			.. index:: plotting
			
			Data values to be used as the NeXus *plottable data*. As the upper case ``DATA``
			indicates, the names of the ``DATA`` fields can be chosen :ref:`freely &lt;validItemName&gt;`. The :ref:`signal attribute &lt;/NXdata@signal-attribute&gt;`
			and :ref:`auxiliary_signals attribute&lt;/NXdata@auxiliary_signals-attribute&gt;` can be used to find all datasets in the ``NXdata``
			that contain data values.

			The maximum rank is ``32`` for compatibility with backend file formats.
		</doc>
		<dimensions rank="dataRank">
			<doc>
				The rank (``dataRank``) of the ``data`` must satisfy
				``1 &lt;= dataRank &lt;= NX_MAXRANK=32``.  
			</doc>
		</dimensions>
		<attribute name="signal" type="NX_POSINT"
			deprecated="Use the group ``signal`` attribute   (NIAC2014)">
			<doc>
				.. index:: plotting
	
				Plottable (independent) axis, indicate index number.
				Only one field in a :ref:`NXdata` group may have the
				``signal=1`` attribute.
				Do not use the ``signal`` attribute with the ``axis`` attribute.
			</doc>
		</attribute>
		<attribute name="axes"
			deprecated="Use the group ``axes`` attribute   (NIAC2014)">
			<doc>
				Defines the names of the coordinates
				(independent axes) for this data set
				as a colon-delimited array.
				NOTE: The :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute is the preferred
				method of designating a link.
				Do not use the :ref:`axes &lt;/NXdata@axes-attribute&gt;` attribute with the ``axis`` attribute.
			</doc>
		</attribute>
		<attribute name="long_name">
			<doc>data label</doc>
		</attribute>
	</field>
	<field name="FIELDNAME_errors" type="NX_NUMBER" nameType="any">
		<doc>
			"Errors" (meaning *uncertainties* or *standard deviations*)
			associated with any field named ``FIELDNAME`` in this ``NXdata``
			group (e.g. an axis, signal or auxiliary signal).

			The dimensions of the ``FIELDNAME_errors`` field must match
			the dimensions of the ``FIELDNAME`` field.
		</doc>
	</field>
	<field name="errors" type="NX_NUMBER" deprecated="Use ``DATA_errors`` instead (NIAC2018)">
		<doc>
			Standard deviations of data values - 
			the data array is identified by the group attribute ``signal``. 
			The ``errors`` array must have the same dimensions as ``DATA``.
			Client is responsible for defining the dimensions of the data.
		</doc>
		<dimensions rank="dataRank">
			<doc>
				The ``errors`` must have the same rank (``dataRank``) 
				as the ``data``.
			</doc>
		</dimensions>
	</field>

	<!-- Data vs. plot coordinates -->
	<field name="scaling_factor" type="NX_FLOAT">
		<doc>
			The elements in data are usually float values really. For
			efficiency reasons these are usually stored as integers
			after scaling with a scale factor. This value is the scale
			factor. It is required to get the actual physical value,
			when necessary.
		</doc>
	</field>
	<field name="offset" type="NX_FLOAT">
		<doc>
			An optional offset to apply to the values in data.
		</doc>
	</field>

	<!-- Other fields -->
	<field name="title">
		<doc>
			Title for the plot.
		</doc>
	</field>

	<!-- Deprecated fields -->
	<field name="x" type="NX_FLOAT" units="NX_ANY">
		<doc>
			This is an array holding the values to use for the x-axis of
			data. The units must be appropriate for the measurement.

			This is a special case of a :ref:`AXISNAME field &lt;/NXdata/AXISNAME-field&gt;`
			kept for backward compatiblity.
		</doc>
		<dimensions rank="1">
			<dim index="1" value="nx" />
		</dimensions>
	</field>
	<field name="y" type="NX_FLOAT" units="NX_ANY">
		<doc>
			This is an array holding the values to use for the y-axis of
			data. The units must be appropriate for the measurement.

			This is a special case of a :ref:`AXISNAME field &lt;/NXdata/AXISNAME-field&gt;`
			kept for backward compatiblity.
		</doc>
		<dimensions rank="1">
			<dim index="1" value="ny" />
		</dimensions>
	</field>
	<field name="z" type="NX_FLOAT" units="NX_ANY">
		<doc>
			This is an array holding the values to use for the z-axis of
			data. The units must be appropriate for the measurement.

			This is a special case of a :ref:`AXISNAME field &lt;/NXdata/AXISNAME-field&gt;`
			kept for backward compatiblity.
		</doc>
		<dimensions rank="1">
			<dim index="1" value="nz" />
		</dimensions>
	</field>
</definition>
